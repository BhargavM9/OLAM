---
- name: Mount Audit and df -Th Output
  hosts: all
  become: yes
  gather_facts: yes

  vars:
    ignore_fstypes:
      - tmpfs
      - devtmpfs
      - proc
      - sysfs
      - cgroup
      - cgroup2
      - overlay
      - debugfs
      - selinuxfs
      - autofs
      - fusectl
      - rpc_pipefs
      - mqueue
      - hugetlbfs
      - pstore
      - securityfs
      - binfmt_misc

  tasks:

    - name: Parse expected mounts from /etc/fstab
      shell: |
        awk 'BEGIN{OFS="|"}
             /^[[:space:]]*#/ {next}
             NF < 4 {next}
             $3=="swap" {next}
             $4 ~ /noauto/ {next}
             $3 ~ /^(proc|sysfs|devpts|tmpfs|cgroup|cgroup2|overlay|autofs|mqueue|hugetlbfs|pstore|securityfs|debugfs|selinuxfs|rpc_pipefs|binfmt_misc)$/ {next}
             {print $1,$2,$3,$4}' /etc/fstab
      register: fstab_raw
      changed_when: false
      failed_when: false

    - name: Build structured fstab entries
      set_fact:
        fstab_entries: >-
          {{
            fstab_raw.stdout_lines | default([]) | map('split', '|') |
            map('community.general.dict_kv', ['device', 'mount', 'fstype', 'options']) | list
          }}

    - name: Set live mounts from ansible facts
      set_fact:
        live_mounts: "{{ ansible_mounts | rejectattr('fstype','in', ignore_fstypes) | list }}"
        live_mount_points: "{{ live_mounts | map(attribute='mount') | list }}"

    - name: Compute missing mounts
      set_fact:
        missing_mounts: >-
          {{
            fstab_entries | map(attribute='mount') | list
            | difference(live_mount_points)
          }}

    - name: Find mismatched mounts
      set_fact:
        mismatched_mounts: >-
          {% set out = [] %}
          {% for e in fstab_entries %}
            {% set live = (live_mounts | selectattr('mount','equalto', e.mount) | list) %}
            {% if live %}
              {% set dev_match = e.device.startswith('UUID=') or live[0].device == e.device %}
              {% if not dev_match or e.fstype != live[0].fstype %}
                {% set _ = out.append({
                  'mount': e.mount,
                  'fstab_device': e.device,
                  'fstab_fstype': e.fstype,
                  'live_device': live[0].device,
                  'live_fstype': live[0].fstype
                }) %}
              {% endif %}
            {% endif %}
          {% endfor %}
          {{ out }}

    - name: Report issues found
      debug:
        msg: |
          Host: {{ inventory_hostname }}
          Missing mounts: {{ missing_mounts }}
          Mismatched mounts:
          {{ mismatched_mounts | to_nice_yaml }}

    - name: Print df -Th output
      command: df -Th
      register: df_out
      changed_when: false

    - name: Show df -Th (verbatim)
      debug:
        msg: "{{ df_out.stdout }}"
