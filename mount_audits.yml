---
- name: Audit mounts vs fstab and print df -Th (portable)
  hosts: all
  gather_facts: yes
  become: yes

  vars:
    ignore_fstypes:
      - tmpfs
      - devtmpfs
      - proc
      - sysfs
      - cgroup
      - cgroup2
      - overlay
      - debugfs
      - selinuxfs
      - autofs
      - fusectl
      - rpc_pipefs
      - mqueue
      - hugetlbfs
      - pstore
      - securityfs
      - binfmt_misc

  tasks:
    # -------- EXPECTED (from /etc/fstab) --------
    - name: Parse expected mounts from /etc/fstab (device|mount|fstype|options)
      shell: |
        awk 'BEGIN{OFS="|"}
             /^[[:space:]]*#/ {next}                      # comments
             NF < 4 {next}                                # need at least 4 fields
             $3=="swap" {next}                            # skip swap
             $4 ~ /noauto/ {next}                         # skip noauto
             $3 ~ /^(proc|sysfs|devpts|tmpfs|cgroup|cgroup2|overlay|autofs|mqueue|hugetlbfs|pstore|securityfs|debugfs|selinuxfs|rpc_pipefs|binfmt_misc)$/ {next}
             {print $1,$2,$3,$4}' /etc/fstab
      register: fstab_raw
      changed_when: false
      failed_when: false   # some boxes may have very minimal fstab

    - name: Init fstab_entries
      set_fact:
        fstab_entries: []
      when: fstab_raw.stdout != ""

    - name: Build structured fstab entries (no external filters)
      set_fact:
        fstab_entries: >-
          {{ fstab_entries
             + [ {'device': parts[0], 'mount': parts[1], 'fstype': parts[2], 'options': parts[3]} ] }}
      vars:
        parts: "{{ item.split('|') }}"
      loop: "{{ fstab_raw.stdout_lines | default([]) }}"
      when: fstab_raw.stdout != ""

    # -------- LIVE (from facts) --------
    - name: Set live mounts from facts (filter out virtual fstypes)
      set_fact:
        live_mounts: "{{ (ansible_mounts | default([]))
                         | rejectattr('fstype','in', ignore_fstypes) | list }}"

    - name: Build list of live mount points
      set_fact:
        live_mount_points: "{{ live_mounts | map(attribute='mount') | list }}"

    # -------- COMPARISONS --------
    - name: Compute missing mounts (in fstab but not mounted)
      set_fact:
        missing_mounts: >-
          {{
            (fstab_entries | default([]) | map(attribute='mount') | list)
            | difference(live_mount_points | default([]))
          }}

    - name: Find mismatched mounts (device/fstype differ vs fstab)
      set_fact:
        mismatched_mounts: >-
          {%
            set out = [] %}
          {%
            for e in (fstab_entries | default([])) %}
            {%
              set live = (live_mounts | selectattr('mount','equalto', e.mount) | list) %}
            {%
              if live and ( (live[0].device|default('')) != e.device or (live[0].fstype|default('')) != e.fstype ) %}
              {%
                set _ = out.append({
                  'mount': e.mount,
                  'fstab_device': e.device,
                  'fstab_fstype': e.fstype,
                  'live_device': live[0].device|default('unknown'),
                  'live_fstype': live[0].fstype|default('unknown')
                }) %}
              {%
              endif %}
          {%
            endfor %}
          {{ out }}

    # -------- DRY RUN & DF OUTPUT --------
    - name: Dry-run mount -a (portable)  # -f = fake
      shell: mount -fav
      register: mount_dryrun
      changed_when: false
      failed_when: false

    - name: Capture df -Th (verbatim)
      command: df -Th
      register: df_out
      changed_when: false

    # -------- OUTPUT --------
    - name: Report problems (missing/mismatched and dry-run rc)
      debug:
        msg: |
          Host: {{ inventory_hostname }}
          Missing mounts: {{ missing_mounts | default([]) }}
          Mismatched mounts:
          {{ mismatched_mounts | default([]) | to_nice_json }}
          mount -fav rc={{ mount_dryrun.rc }}
          mount -fav output (truncated to first 20 lines):
          {{ (mount_dryrun.stdout | default('') | splitlines() | list)[:20] | join('\n') }}

    - name: Print df -Th like on the server
      debug:
        msg: |
          {{ df_out.stdout | trim }}

    # Comment this task if you want report-only behavior
    - name: Fail if issues found
      fail:
        msg: >
          Mount audit failed on {{ inventory_hostname }}.
          Missing={{ missing_mounts | default([]) }},
          Mismatched={{ mismatched_mounts | default([]) }},
          DryRunRC={{ mount_dryrun.rc }}
      when: >
        (missing_mounts | default([]) | length > 0)
        or (mismatched_mounts | default([]) | length > 0)
        or (mount_dryrun.rc | int != 0)
