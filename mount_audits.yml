---
- name: Mount Audit and df -Th Output
  hosts: all
  become: yes
  gather_facts: yes

  vars:
    ignore_fstypes:
      - tmpfs
      - devtmpfs
      - proc
      - sysfs
      - cgroup
      - cgroup2
      - overlay
      - debugfs
      - selinuxfs
      - autofs
      - fusectl
      - rpc_pipefs
      - mqueue
      - hugetlbfs
      - pstore
      - securityfs
      - binfmt_misc

  tasks:

    - name: Parse expected mounts from /etc/fstab
      shell: |
        awk 'BEGIN{OFS="|"}
             /^[[:space:]]*#/ {next}
             NF < 4 {next}
             $3=="swap" {next}
             $4 ~ /noauto/ {next}
             $3 ~ /^(proc|sysfs|devpts|tmpfs|cgroup|cgroup2|overlay|autofs|mqueue|hugetlbfs|pstore|securityfs|debugfs|selinuxfs|rpc_pipefs|binfmt_misc)$/ {next}
             {print $1,$2,$3,$4}' /etc/fstab
      register: fstab_raw
      changed_when: false
      failed_when: false

    - name: Build structured fstab entries
      set_fact:
        fstab_entries: "{{ fstab_raw.stdout_lines | map('split', '|') | map('list') | map('extract_fstab') | list }}"
      vars:
        extract_fstab: >
          {{
            lambda x: {
              'device': x[0],
              'mount': x[1],
              'fstype': x[2],
              'options': x[3]
            } if x|length == 4 else {}
          }}

    - name: Filter live mounts from facts
      set_fact:
        live_mounts: "{{ ansible_mounts | rejectattr('fstype', 'in', ignore_fstypes) | list }}"
        live_mount_points: "{{ live_mounts | map(attribute='mount') | list }}"

    - name: Compute missing mounts (in fstab but not mounted)
      set_fact:
        missing_mounts: >-
          {{ fstab_entries | map(attribute='mount') | list | difference(live_mount_points) }}

    - name: Find mismatched mounts (device or fstype differ)
      set_fact:
        mismatched_mounts: >-
          {% set out = [] %}
          {% for e in fstab_entries %}
            {% set live = (live_mounts | selectattr('mount','equalto', e.mount) | list) %}
            {% if live %}
              {% set live_dev = live[0].device %}
              {% set live_type = live[0].fstype %}
              {% if (not e.device.startswith('UUID=')) and (e.device != live_dev or e.fstype != live_type) %}
                {% set _ = out.append({
                  'mount': e.mount,
                  'fstab_device': e.device,
                  'fstab_fstype': e.fstype,
                  'live_device': live_dev,
                  'live_fstype': live_type
                }) %}
              {% endif %}
            {% endif %}
          {% endfor %}
          {{ out }}

    - name: Print mount discrepancies
      debug:
        msg: |
          Host: {{ inventory_hostname }}
          Missing mounts:
          {{ missing_mounts | join('\n') if missing_mounts else 'None' }}
          Mismatched mounts:
          {% if mismatched_mounts %}
          {% for item in mismatched_mounts %}
          - Mount: {{ item.mount }}
            fstab:  {{ item.fstab_device }} ({{ item.fstab_fstype }})
            live:   {{ item.live_device }} ({{ item.live_fstype }})
          {% endfor %}
          {% else %}
          None
          {% endif %}

    - name: Show df -Th output
      command: df -Th
      register: df_out
      changed_when: false

    - name: Print df -Th like server output
      debug:
        msg: "{{ df_out.stdout }}"
