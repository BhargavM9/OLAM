---
- name: Audit mounts and display df -Th
  hosts: all
  become: yes
  gather_facts: yes

  vars:
    ignore_fstypes:
      - tmpfs
      - devtmpfs
      - proc
      - sysfs
      - cgroup
      - cgroup2
      - overlay
      - debugfs
      - selinuxfs
      - autofs
      - fusectl
      - rpc_pipefs
      - mqueue
      - hugetlbfs
      - pstore
      - securityfs
      - binfmt_misc

  tasks:

    - name: Parse fstab entries into raw lines
      shell: |
        awk 'BEGIN{OFS="|"}
             /^[[:space:]]*#/ {next}
             NF < 4 {next}
             $3=="swap" {next}
             $4 ~ /noauto/ {next}
             $3 ~ /^(proc|sysfs|devpts|tmpfs|cgroup|cgroup2|overlay|autofs|mqueue|hugetlbfs|pstore|securityfs|debugfs|selinuxfs|rpc_pipefs|binfmt_misc)$/ {next}
             {print $1,$2,$3,$4}' /etc/fstab
      register: fstab_raw
      changed_when: false

    - name: Build structured fstab entries from raw lines
      set_fact:
        fstab_entries: "{{ fstab_entries | default([]) + [ {
          'device': item.split('|')[0],
          'mount':  item.split('|')[1],
          'fstype': item.split('|')[2],
          'options': item.split('|')[3]
        } ] }}"
      loop: "{{ fstab_raw.stdout_lines }}"
      when: item.split('|') | length == 4

    - name: Filter live mounts from ansible_mounts
      set_fact:
        live_mounts: "{{ ansible_mounts | rejectattr('fstype', 'in', ignore_fstypes) | list }}"
        live_mount_points: "{{ live_mounts | map(attribute='mount') | list }}"

    - name: Find missing mounts (in fstab but not mounted)
      set_fact:
        missing_mounts: "{{ fstab_entries | map(attribute='mount') | list | difference(live_mount_points) }}"

    - name: Find mismatched mounts
      set_fact:
        mismatched_mounts: >-
          {% set out = [] %}
          {% for e in fstab_entries %}
            {% set live = (live_mounts | selectattr('mount','equalto', e.mount) | list) %}
            {% if live %}
              {% if not e.device.startswith('UUID=') and (live[0].device != e.device or live[0].fstype != e.fstype) %}
                {% set _ = out.append({
                  'mount': e.mount,
                  'fstab_device': e.device,
                  'fstab_fstype': e.fstype,
                  'live_device': live[0].device,
                  'live_fstype': live[0].fstype
                }) %}
              {% endif %}
            {% endif %}
          {% endfor %}
          {{ out }}

    - name: Print mount audit report
      debug:
        msg: |
          Host: {{ inventory_hostname }}
          Missing mounts:
          {{ missing_mounts | join('\n') if missing_mounts else 'None' }}

          Mismatched mounts:
          {% if mismatched_mounts %}
          {% for m in mismatched_mounts %}
          - {{ m.mount }}: fstab={{ m.fstab_device }} ({{ m.fstab_fstype }}), live={{ m.live_device }} ({{ m.live_fstype }})
          {% endfor %}
          {% else %}
          None
          {% endif %}

    - name: Print df -Th output like Linux
      command: df -Th
      register: df_out
      changed_when: false

    - name: Show df -Th output
      debug:
        msg: "{{ df_out.stdout }}"
