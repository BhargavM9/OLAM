---
- name: Disk Usage and Mount Verification Playbook
  hosts: all  # Adjust to your inventory group for all VMs
  become: yes  # Run with sudo privileges
  gather_facts: no  # No need for facts gathering

  tasks:
    - name: Get df -Th output
      command: df -Th
      register: df_output
      changed_when: false

    - name: Display df -Th output
      debug:
        msg: "{{ df_output.stdout_lines }}"

    - name: Get /etc/fstab contents
      command: cat /etc/fstab
      register: fstab_content
      changed_when: false

    - name: Parse fstab for mount points
      set_fact:
        fstab_mounts: "{{ fstab_mounts | default([]) + [item.split()[1]] }}"
      loop: "{{ fstab_content.stdout_lines }}"
      when: item | trim | length > 0 and not item.startswith('#') and item.split() | length >= 4 and item.split()[2] != 'swap'
      vars:
        fstab_mounts: []

    - name: Get mounted filesystems from df
      set_fact:
        mounted_filesystems: "{{ mounted_filesystems | default([]) + [item.split()[6]] }}"
      loop: "{{ df_output.stdout_lines[1:] }}"  # Skip header
      vars:
        mounted_filesystems: []

    - name: Find missing mounts
      set_fact:
        missing_mounts: "{{ fstab_mounts | difference(mounted_filesystems) }}"

    - name: Report missing mounts if any
      debug:
        msg: "Missing mounts on {{ inventory_hostname }}: {{ missing_mounts }}"
      when: missing_mounts | length > 0

    - name: Check disk usage
      debug:
        msg: "Filesystem {{ item.split()[0] }} on mount point {{ item.split()[5] }} on host {{ inventory_hostname }} exceeds 90% usage with {{ item.split()[4] }} used."
      loop: "{{ df_output.stdout_lines[1:] }}"  # Skip header
      when: item.split()[4] | default('0%') | regex_replace('%', '') | int > 90