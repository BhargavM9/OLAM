---
- name: Disk Usage and Mount Verification Playbook
  hosts: all  # Adjust to your inventory group for all VMs
  become: yes  # Run with sudo privileges
  gather_facts: no  # No need for facts gathering

  tasks:
    - name: Get df -Th output
      command: df -Th
      register: df_output
      changed_when: false

    - name: Display df -Th output
      debug:
        msg: "{{ df_output.stdout_lines }}"

    - name: Verify mounts
      shell: |
        # Get fstab mount points, excluding comments and swap
        fstab_mounts=$(awk '!/^#/ && $3 != "swap" && NF >= 4 {print $2}' /etc/fstab | sort -u)
        # Get df mount points, excluding header
        df_mounts=$(df -Th | awk 'NR>1 {print $NF}' | sort -u)
        # Find missing mounts using comm
        missing=$(comm -23 <(echo "$fstab_mounts") <(echo "$df_mounts") | tr '\n' ',' | sed 's/,$//')
        # Get comma-separated fstab mount points for reporting
        fstab_mounts_list=$(echo "$fstab_mounts" | tr '\n' ',' | sed 's/,$//')
        if [ -z "$missing" ]; then
          echo "All mounts are good on {{ inventory_hostname }}: $fstab_mounts_list"
        else
          echo "Missing mounts on {{ inventory_hostname }}: $missing"
        fi
      register: mount_check
      changed_when: false

    - name: Report mount verification
      debug:
        msg: "{{ mount_check.stdout }}"

    - name: Filter exceeding filesystems
      set_fact:
        exceeding_filesystems: "{{ exceeding_filesystems | default([]) + (item | split | length >= 7 and item | split | item[4] | regex_replace('%', '') | int > 45 | ternary([item], [])) }}"
      loop: "{{ df_output.stdout_lines[1:] }}"
      when: df_output.stdout_lines[1:] | length > 0

    - name: Report exceeding disk usage
      debug:
        msg: "Filesystem {{ item.split()[0] }} or mount point {{ item.split()[6] }} on this host exceeds 45% with {{ item.split()[4] }}."
      loop: "{{ exceeding_filesystems }}"
      when: exceeding_filesystems | length > 0